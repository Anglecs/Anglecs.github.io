<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git学习</title>
      <link href="/2023/05/22/git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/05/22/git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="git学习"><a href="#git学习" class="headerlink" title="git学习"></a>git学习</h1><h2 id="1、初始化项目"><a href="#1、初始化项目" class="headerlink" title="1、初始化项目"></a>1、初始化项目</h2><p>进入新项目的文件夹并初始化项目，只需要</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="2、创建一个github仓库"><a href="#2、创建一个github仓库" class="headerlink" title="2、创建一个github仓库"></a>2、创建一个github仓库</h2><p>点击页面右上角的+符号，然后选择 “New repository”。给版本库起个名字，然后向下滚动并点击 “Create repository”。</p><h2 id="3、一个文件被git跟踪的阶段"><a href="#3、一个文件被git跟踪的阶段" class="headerlink" title="3、一个文件被git跟踪的阶段"></a>3、一个文件被git跟踪的阶段</h2><h3 id="已经提交的阶段"><a href="#已经提交的阶段" class="headerlink" title="已经提交的阶段"></a>已经提交的阶段</h3><p>一个文件的所有修改都已经被保存在本地的repo中时，该文件就处于提交（commit）状态。这种状态下的文件可以被推送到远程repo上</p><h3 id="已修改状态"><a href="#已修改状态" class="headerlink" title="已修改状态"></a>已修改状态</h3><p>处于暂存（staged)状态的文件意味着可以被提交。在这种状态下，所有必要的修改已经完成，下一步就是把文件移到提交状态</p><p>文件——&gt;暂存——&gt;提交——&gt;推送</p><p>提交是提交到本地，推送才是push到github仓库</p><h2 id="4、如何在git中添加文件"><a href="#4、如何在git中添加文件" class="headerlink" title="4、如何在git中添加文件"></a>4、如何在git中添加文件</h2><p>使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>如果想添加一个特定的文件（e.g. aboutyou.txt)，也可以使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add aboutyou.txt</span><br></pre></td></tr></table></figure><p>这样的格式</p><p>添加完后文件就处于暂存状态，下一步就是提交</p><h2 id="5、如何提交文件"><a href="#5、如何提交文件" class="headerlink" title="5、如何提交文件"></a>5、如何提交文件</h2><p>使用如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure><p>其中<code>git commit</code>告诉git所有被暂存的文件都已经准备好被提交了，<code>-m &quot;the first commit&quot;</code>是提交信息，<code>m</code>是信息的缩写，<code>the first commit</code>是具体的信息</p><p>现在文件就处于提交状态了</p><h2 id="6、推送仓库到github"><a href="#6、推送仓库到github" class="headerlink" title="6、推送仓库到github"></a>6、推送仓库到github</h2><p>创建完仓库后浏览器会跳转一个页面，告诉你怎么在本地新建一个仓库或者推送现有仓库，跟着一步步把代码运行一遍就可以了</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python搭建虚拟环境</title>
      <link href="/2023/05/16/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
      <url>/2023/05/16/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1、在搭建机器人的时候，按照官网的步骤创建虚拟环境后用pycharm打开项目找不到环境（我就又在pycharm上重新创了一个）</p><p>有空研究下（</p><p>2023-05-22更新：</p><p><strong>默认</strong>下载了pycharm并且安装好了poetry</p><p>先创建一个新的项目文件夹，进入项目文件夹并用pycharm打开，左下角选择<code>终端</code>，输入命令<code>poetry init</code>在已有项目中添加poetry管理，执行完后会发现项目根目录下出现了一个<code>pyproject.toml</code>文件，这就是poetry的配置文件</p><p>添加完poetry管理后，再用poetry添加虚拟环境，查询<a href="%22https://python-poetry.org/docs/configuration/">官方文档</a>可知，通过配置参数可以把虚拟环境安装到项目文件夹下而不是C盘😡,具体代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry config virtualenvs.in-project true</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poetry env use python</span><br></pre></td></tr></table></figure><p>添加完虚拟环境后用<code>poetry env info</code>查看虚拟环境</p><p>创建完虚拟环境后就是为当前项目使用这个环境,在pycharm的右下角选择添加解释器,找到刚刚创建的<code>.venv/Scripts/python.exe</code>并添加,再选择这个环境作为当前项目的解释器</p><p>最后<code>poetry shell</code>启动虚拟环境即可</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> poetry </tag>
            
            <tag> 虚拟环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDN课程实验</title>
      <link href="/2023/05/13/SDN/"/>
      <url>/2023/05/13/SDN/</url>
      
        <content type="html"><![CDATA[<h1 id="SDN"><a href="#SDN" class="headerlink" title="SDN"></a>SDN</h1><p>[toc]</p><p>———————–2023-5-13</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>历史-&gt;威胁-&gt;发展</p><p>三大主流SDN标准化技术：OpenFlow、Overlay（网络虚拟化叠加）&amp;I2RS（路由系统接口）、NFV</p><p>NFV与SDN的基础都是通用服务器、云计算以及虚拟化技术</p><p>NFV与SDN存在互补性，二者相互独立，没有依赖关系</p><p>OpenFlow改变了网络结构——NetworkOS</p><h2 id="定义和架构"><a href="#定义和架构" class="headerlink" title="定义和架构"></a>定义和架构</h2><p>SDN——软件定义网络</p><p>架构：ONF所定义的典型架构：应用层、控制层、基础设施层</p><p>南向接口：向下与设备交互的接口称为南向接口</p><p>北向接口：控制器向上为SDN APP提供的编程接口（API）就称为北向接口</p><p>​SDN最本质的特征就是允许通过编程的方式控制网络</p><p>东西向接口：定义控制器之间通信的接口</p><p>基本概念——传统网络设备的数控分离</p><p>​  SDN数控分离：SDN主要特征之一</p><p>​  SDN网络可编程：另一个重要属性，主要体现在北向接口</p><h2 id="SDN仿真基础"><a href="#SDN仿真基础" class="headerlink" title="SDN仿真基础"></a>SDN仿真基础</h2><h3 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h3><h3 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h3><p>通过虚拟化技术将一台计算机虚拟为多台逻辑计算机</p><h3 id="虚拟化架构"><a href="#虚拟化架构" class="headerlink" title="虚拟化架构"></a>虚拟化架构</h3><p>两种虚拟化方案：裸金属型、宿主型</p><h3 id="Mininet软件"><a href="#Mininet软件" class="headerlink" title="Mininet软件"></a>Mininet软件</h3><h3 id="网络构建参数："><a href="#网络构建参数：" class="headerlink" title="网络构建参数："></a>网络构建参数：</h3><p>–topo</p><p>–switch：定义mininet要使用的交换机（默认使用OpenVSwitch交换机，即OVSK）</p><p>–controller：定义要使用的控制器</p><p>–mac：自动设置设备的mac地址</p><h3 id="内部交互命令"><a href="#内部交互命令" class="headerlink" title="内部交互命令"></a>内部交互命令</h3><p>net&#x2F;nodes&#x2F;links&#x2F;pingall</p><p>net:显示链接信息</p><p>nodes：节点信息</p><p>links：链路健壮性信息</p><p>pingall：验证所有主机间通信</p><p>iperf：两节点间进行带宽测试</p><p>iperfudp：同上</p><p>link：禁用或开始节点间链接</p><p>dpctl：所有交换机上增删改查流表</p><h3 id="Mininet可视化"><a href="#Mininet可视化" class="headerlink" title="Mininet可视化"></a>Mininet可视化</h3><p>直接在界面上编辑任意拓扑</p><h3 id="启动miniedit"><a href="#启动miniedit" class="headerlink" title="启动miniedit"></a>启动miniedit</h3><p>进入mininet&#x2F;examples </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./miniedit.py</span><br></pre></td></tr></table></figure><h3 id="Miniedit拓扑建立"><a href="#Miniedit拓扑建立" class="headerlink" title="Miniedit拓扑建立"></a>Miniedit拓扑建立</h3><h3 id="Miniedit属性配置"><a href="#Miniedit属性配置" class="headerlink" title="Miniedit属性配置"></a>Miniedit属性配置</h3><h3 id="Miniedit全局配置"><a href="#Miniedit全局配置" class="headerlink" title="Miniedit全局配置"></a>Miniedit全局配置</h3><p>左上角edit选项</p><h3 id="Miniedit运行"><a href="#Miniedit运行" class="headerlink" title="Miniedit运行"></a>Miniedit运行</h3><p>左下角run</p><h3 id="Miniedit保存脚本"><a href="#Miniedit保存脚本" class="headerlink" title="Miniedit保存脚本"></a>Miniedit保存脚本</h3><p>File-Export Level 2 xxxxxxx（来不及）</p><h3 id="脚本执行"><a href="#脚本执行" class="headerlink" title="脚本执行"></a>脚本执行</h3><p>chmod -R 777 sdnlab.py</p><p>.&#x2F;sdnlab.py</p><h2 id="SDN平面"><a href="#SDN平面" class="headerlink" title="SDN平面"></a>SDN平面</h2><h3 id="硬件路由器数据平面"><a href="#硬件路由器数据平面" class="headerlink" title="硬件路由器数据平面"></a>硬件路由器数据平面</h3><h4 id="主控板"><a href="#主控板" class="headerlink" title="主控板"></a>主控板</h4><p>组成：CPU，X86通用处理器芯片</p><p>路由器操作系统</p><p>管理员命令行操作平台</p><h4 id="背板"><a href="#背板" class="headerlink" title="背板"></a>背板</h4><p>功能：设备板卡间总线：数据总线，控制总线，管理总线</p><p>集群机柜间总线：设备间互通总线</p><p>总线架构：多级Clos架构（无阻塞、理论无限扩展）</p><h4 id="接口板"><a href="#接口板" class="headerlink" title="接口板"></a>接口板</h4><p>组成：光模块</p><p>中低性能ASIC芯片或FPGA芯片处理器</p><p>功能：实现光电转换</p><p>上报主控板接入状态</p><h4 id="线卡板"><a href="#线卡板" class="headerlink" title="线卡板"></a>线卡板</h4><p>数据平面&#x2F;控制平面最重要的部分</p><p>分上下行两部分板卡</p><h4 id="PULL型交换调度算法"><a href="#PULL型交换调度算法" class="headerlink" title="PULL型交换调度算法"></a>PULL型交换调度算法</h4><h4 id="POP型交换调度算法"><a href="#POP型交换调度算法" class="headerlink" title="POP型交换调度算法"></a>POP型交换调度算法</h4><h3 id="软件路由器数据平面"><a href="#软件路由器数据平面" class="headerlink" title="软件路由器数据平面"></a>软件路由器数据平面</h3><h4 id="Click"><a href="#Click" class="headerlink" title="Click"></a>Click</h4><p>c++编写，基于Linux实现</p><h3 id="SDN数据平面"><a href="#SDN数据平面" class="headerlink" title="SDN数据平面"></a>SDN数据平面</h3><h4 id="OVS简单架构"><a href="#OVS简单架构" class="headerlink" title="OVS简单架构"></a>OVS简单架构</h4><p>用户数据空间和内核</p><p>管理层</p><h4 id="vswitched"><a href="#vswitched" class="headerlink" title="vswitched"></a>vswitched</h4><p>OVS的核心模块</p><p>通过vswitched可以配置一系列特性</p><h4 id="OVS下的快速交换转发通道"><a href="#OVS下的快速交换转发通道" class="headerlink" title="OVS下的快速交换转发通道"></a>OVS下的快速交换转发通道</h4><h4 id="OVS下的慢速交换转发通道"><a href="#OVS下的慢速交换转发通道" class="headerlink" title="OVS下的慢速交换转发通道"></a>OVS下的慢速交换转发通道</h4>]]></content>
      
      
      <categories>
          
          <category> SDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SDN </tag>
            
            <tag> 课程实验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建qq机器人(二)</title>
      <link href="/2022/12/28/qqbot(2)/"/>
      <url>/2022/12/28/qqbot(2)/</url>
      
        <content type="html"><![CDATA[<p>跟着教程走，要致富，先撸树！</p><p>忙了一下午终于</p><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20221228181423079.png" alt="image-20221228181423079"></p><p><del>我的8080端口被占用了</del></p><p>找了半天的bug</p><p><del>虽然没干什么事但是累死了</del></p><p>2022-12-29更新：</p><h1 id="安装saya"><a href="#安装saya" class="headerlink" title="安装saya"></a>安装saya</h1><p>saya可以帮助管理机器人中不同的功能，就像是往里打mod，saya就是mod管理器</p><p>来一点文件头（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from graia.ariadne.app import Ariadne</span><br><span class="line">from graia.ariadne.event.message import GroupMessage</span><br><span class="line">from graia.ariadne.event.message import FriendMessage</span><br><span class="line">from graia.ariadne.message.chain import MessageChain</span><br><span class="line">from graia.ariadne.model import Group</span><br><span class="line">from graia.ariadne.model import Friend</span><br><span class="line"></span><br><span class="line">from graia.saya import Channel</span><br><span class="line">from graia.saya.builtins.broadcast.schema import ListenerSchema</span><br><span class="line"></span><br><span class="line">channel = Channel.current()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> bot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qq </tag>
            
            <tag> bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建qq机器人(一)</title>
      <link href="/2022/12/28/qqbot/"/>
      <url>/2022/12/28/qqbot/</url>
      
        <content type="html"><![CDATA[<p>看到别人在qq<del>调教</del>自己的机器人有点心动也想自己搭一个</p><p>网上搜到了mirai框架，下面是他们的开发文档</p><p><a href="https://docs.mirai.mamoe.net/">Mirai | mirai (mamoe.net)</a></p><p>官方文档的搭建教程：<a href="https://docs.mirai.mamoe.net/ConsoleTerminal.html">Mirai - Console Terminal | mirai (mamoe.net)</a></p><p>ariadne社区文档的搭建教程：<a href="https://graiax.cn/before/install_mirai.html">Mirai 的安装与配置 | GraiaX 文档</a></p><p>感觉社区文档的更清楚一点，我就跟着社区文档走了</p><p>mirai部分搭建就几个步骤：<br>1.安装java11</p><p>打开cmd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install Microsoft.OpenJDK.17</span><br></pre></td></tr></table></figure><p>2.下载解压mcl</p><p>下载地址：<a href="https://github.com/iTXTech/mirai-console-loader/releases/download/v2.1.0/mcl-2.1.0.zip">https://github.com/iTXTech/mirai-console-loader/releases/download/v2.1.0/mcl-2.1.0.zip</a></p><p><del>不会有人不会解压吧</del></p><p>3.安装mah插件并配置mah信息</p><p>进到上一步解压出来的文件夹中先双击mcl.cmd运行，然后shift+右键，然后选择启动Windows powershell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mcl --update-package net.mamoe:mirai-api-http --channel stable-v2 --type plugin</span><br><span class="line">./mcl -u</span><br></pre></td></tr></table></figure><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20221228151545140.png" alt="image-20221228151545140"></p><p>这样就是成功了</p><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20221228152231637.png" alt="image-20221228152231637"></p><p>登录账号试试，不建议按照教程设置自动登录，因为每次登录要验证，会增加风险</p><p>登陆时弹出界面要验证</p><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20221228152709301.png" alt="image-20221228152709301"></p><p>复制url到浏览器打开，先别急着验证，按f12打开开发者工具，选择网络一栏，再回去验证</p><p>复制得到的ticket到下面一栏按回车</p><p><img src="C:\Users\admin\AppData\Roaming\Typora\typora-user-images\image-20221228153912749.png" alt="image-20221228153912749"></p><p>这样就是成功了</p><p>CTRL+C退出服务，接着去配置mah</p><p>配置完出了点问题（暂时不知道寄在哪）先往后做着吧</p><h2 id="插一嘴"><a href="#插一嘴" class="headerlink" title="插一嘴"></a>插一嘴</h2><p>记得安装<code>poetry</code></p>]]></content>
      
      
      <categories>
          
          <category> bot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qq </tag>
            
            <tag> bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建blog中遇到的一些小问题汇总</title>
      <link href="/2022/12/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/12/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>22-12-25更新</p><h1 id="副标题设计"><a href="#副标题设计" class="headerlink" title="副标题设计"></a>副标题设计</h1><p>在站点配置文件_config.yml下更改 <code>subtitle</code>,但是在网页上找不到在哪</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">盒盒のbox</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">没有奇迹，没有惊喜</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">盒盒</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p><del>在网上搜了一下说<code>Mist</code>主题作者把副标题隐藏了，所以换成<code>Muse</code>主题试一下</del><br>没有用又改回来了</p><h1 id="给文章分类及打tag"><a href="#给文章分类及打tag" class="headerlink" title="给文章分类及打tag"></a>给文章分类及打tag</h1><p>在文章的最开头like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 搭建blog中遇到的一些小问题汇总</span><br><span class="line">date: 2022-12-25</span><br><span class="line">categories:</span><br><span class="line">- hexo</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- blog</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>categories</code>后面的就是文章的分类，好像一个文章只能有一个分类，<code>tags</code>后面的就是文章的tag，可以有很多个</p><p>今天就整这么多吧，摆了（</p><p>22-12-26更新</p><h1 id="博文置顶功能"><a href="#博文置顶功能" class="headerlink" title="博文置顶功能"></a>博文置顶功能</h1><p>在需要置顶的文章的Front-matter中加上top: true即可,like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 搭建blog中遇到的一些小问题汇总</span><br><span class="line">date: 2022-12-25</span><br><span class="line">categories:</span><br><span class="line">- hexo</span><br><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- blog</span><br><span class="line">top: true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
